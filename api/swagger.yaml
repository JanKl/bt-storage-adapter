---
swagger: "2.0"
info:
  description: "An adapter to various (cloud-based) object stores. One has to request\
    \ a base folder under which they can store objects in virtual sub folders using\
    \ an assigned folder secret. The sub folders cannot be created manually but will\
    \ be created automatically as one puts files into it."
  version: "1.0.0"
  title: "Storage Adapter"
  license:
    name: "MIT"
    url: "http://opensource.org/licenses/MIT"
basePath: "/api"
schemes:
- "https"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /baseFolders:
    get:
      description: "Returns all active baseFolders with their last access date and\
        \ time"
      operationId: "baseFoldersGET"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/baseFolderDataWithLastAccess"
      x-swagger-router-controller: "Default"
    post:
      description: "Creates a new base folder and provides the user with the folder\
        \ secret. This will be needed to manage the base folder and store data in\
        \ it. The 'remarks' element can be used to give additional hints onto the\
        \ intended use of the base folder."
      operationId: "baseFoldersPOST"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Additional information on the base folder that is to be created"
        required: false
        schema:
          $ref: "#/definitions/baseFolderCreationData"
      responses:
        201:
          description: "base folder created"
          schema:
            $ref: "#/definitions/baseFolderDataWithFolderSecret"
      x-swagger-router-controller: "Default"
  /{baseFolderName}:
    get:
      description: "Returns all files and folders in the base folder"
      operationId: "baseFolderNameGET"
      produces:
      - "application/json"
      parameters:
      - name: "baseFolderName"
        in: "path"
        description: "Name of the base folder"
        required: true
        type: "string"
        maxLength: 35
        minLength: 35
      - name: "folderSecret"
        in: "query"
        description: "Authorization key for the operation"
        required: true
        type: "string"
        maxLength: 50
        minLength: 50
        format: "password"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/folderContentElement"
        403:
          description: "folder secret not valid"
        404:
          description: "base folder not found"
      x-swagger-router-controller: "Default"
    delete:
      description: "Deletes all files and sub folders in a base folder and the base\
        \ folder itself"
      operationId: "baseFolderNameDELETE"
      parameters:
      - name: "baseFolderName"
        in: "path"
        description: "Name of the base folder"
        required: true
        type: "string"
        maxLength: 35
        minLength: 35
      - name: "folderSecret"
        in: "query"
        description: "Authorization key for the operation"
        required: true
        type: "string"
        maxLength: 50
        minLength: 50
        format: "password"
      responses:
        204:
          description: "base folder deleted"
        403:
          description: "folder secret not valid"
        404:
          description: "base folder not found"
      x-swagger-router-controller: "Default"
  /{baseFolderName}/{subFolderName}:
    get:
      description: "Returns all files and folders in the sub folder"
      operationId: "baseFolderNameSubFolderNameGET"
      produces:
      - "application/json"
      parameters:
      - name: "baseFolderName"
        in: "path"
        description: "Name of the base folder"
        required: true
        type: "string"
        maxLength: 35
        minLength: 35
      - name: "subFolderName"
        in: "path"
        description: "Name of the sub folder"
        required: true
        type: "string"
        maxLength: 40
      - name: "folderSecret"
        in: "query"
        description: "Authorization key for the operation"
        required: true
        type: "string"
        maxLength: 50
        minLength: 50
        format: "password"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/folderContentElement"
        403:
          description: "folder secret not valid"
        404:
          description: "base folder not found"
      x-swagger-router-controller: "Default"
    delete:
      description: "Deletes all files in a sub folder recursively"
      operationId: "baseFolderNameSubFolderNameDELETE"
      parameters:
      - name: "baseFolderName"
        in: "path"
        description: "Name of the base folder"
        required: true
        type: "string"
        maxLength: 35
        minLength: 35
      - name: "subFolderName"
        in: "path"
        description: "Name of the sub folder"
        required: true
        type: "string"
        maxLength: 40
      - name: "folderSecret"
        in: "query"
        description: "Authorization key for the operation"
        required: true
        type: "string"
        maxLength: 50
        minLength: 50
        format: "password"
      responses:
        204:
          description: "sub folder deleted"
        403:
          description: "folder secret not valid"
        404:
          description: "base folder not found"
      x-swagger-router-controller: "Default"
  /{baseFolderName}/{subFolderName}/{fileName}:
    get:
      description: "Returns the specified file"
      operationId: "baseFolderNameSubFolderNameFileNameGET"
      produces:
      - "application/json"
      parameters:
      - name: "baseFolderName"
        in: "path"
        description: "Name of the base folder"
        required: true
        type: "string"
        maxLength: 35
        minLength: 35
      - name: "subFolderName"
        in: "path"
        description: "Name of the sub folder"
        required: true
        type: "string"
        maxLength: 40
      - name: "fileName"
        in: "path"
        description: "Name of the file"
        required: true
        type: "string"
        maxLength: 40
      - name: "folderSecret"
        in: "query"
        description: "Authorization key for the operation"
        required: true
        type: "string"
        maxLength: 50
        minLength: 50
        format: "password"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "string"
            format: "binary"
        403:
          description: "folder secret not valid"
        404:
          description: "base folder not found"
      x-swagger-router-controller: "Default"
    put:
      description: "Updates the specified file"
      operationId: "baseFolderNameSubFolderNameFileNamePUT"
      parameters:
      - name: "baseFolderName"
        in: "path"
        description: "Name of the base folder"
        required: true
        type: "string"
        maxLength: 35
        minLength: 35
      - name: "subFolderName"
        in: "path"
        description: "Name of the sub folder"
        required: true
        type: "string"
        maxLength: 40
      - name: "fileName"
        in: "path"
        description: "Name of the file"
        required: true
        type: "string"
        maxLength: 40
      - name: "folderSecret"
        in: "query"
        description: "Authorization key for the operation"
        required: true
        type: "string"
        maxLength: 50
        minLength: 50
        format: "password"
      - in: "body"
        name: "fileData"
        description: "Raw data of the file"
        required: true
        schema:
          type: "string"
          format: "binary"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/folderContentElement"
      x-swagger-router-controller: "Default"
    delete:
      description: "Delete the file"
      operationId: "baseFolderNameSubFolderNameFileNameDELETE"
      parameters:
      - name: "baseFolderName"
        in: "path"
        description: "Name of the base folder"
        required: true
        type: "string"
        maxLength: 35
        minLength: 35
      - name: "subFolderName"
        in: "path"
        description: "Name of the sub folder"
        required: true
        type: "string"
        maxLength: 40
      - name: "fileName"
        in: "path"
        description: "Name of the file"
        required: true
        type: "string"
        maxLength: 40
      - name: "folderSecret"
        in: "query"
        description: "Authorization key for the operation"
        required: true
        type: "string"
        maxLength: 50
        minLength: 50
        format: "password"
      responses:
        204:
          description: "sub folder deleted"
        403:
          description: "forbidden"
      x-swagger-router-controller: "Default"
definitions:
  baseFolderDataWithLastAccess:
    type: "object"
    properties:
      baseFolderName:
        type: "string"
      remarks:
        type: "string"
      created:
        type: "string"
        format: "date-time"
      lastAccess:
        type: "string"
        format: "date-time"
  baseFolderDataWithFolderSecret:
    type: "object"
    properties:
      baseFolderName:
        type: "string"
      folderSecret:
        type: "string"
        format: "password"
  baseFolderCreationData:
    type: "object"
    properties:
      remarks:
        type: "string"
        maxLength: 50
  folderContentElement:
    type: "object"
    properties:
      fileName:
        type: "string"
      isFolder:
        type: "boolean"
parameters:
  baseFolderNamePathParam:
    name: "baseFolderName"
    in: "path"
    description: "Name of the base folder"
    required: true
    type: "string"
    maxLength: 35
    minLength: 35
  subFolderNamePathParam:
    name: "subFolderName"
    in: "path"
    description: "Name of the sub folder"
    required: true
    type: "string"
    maxLength: 40
  fileNamePathParam:
    name: "fileName"
    in: "path"
    description: "Name of the file"
    required: true
    type: "string"
    maxLength: 40
  fileDataBodyParam:
    in: "body"
    name: "fileData"
    description: "Raw data of the file"
    required: true
    schema:
      type: "string"
      format: "binary"
  folderSecretQueryParam:
    name: "folderSecret"
    in: "query"
    description: "Authorization key for the operation"
    required: true
    type: "string"
    maxLength: 50
    minLength: 50
    format: "password"
